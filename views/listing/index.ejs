<% layout("/layout/boilerplate.ejs") %>
  <style>
    #filters {
      display: flex;
      flex-wrap: wrap;
      gap: 1rem;
      align-items: center;


    }

    .tax-toggle {
    border: 1px solid black;
    border-radius: 1rem;
    padding: 1rem;
    height: 3rem;
    display: flex;
    align-items: center;
    justify-content: center; /* Centers text inside */
    
    /* Responsive Fixes */
    margin-left: auto;
    margin-right: auto;
    max-width: 300px; /* Limits size on large screens */
    width: 80%; /* Adapts to smaller screens */
}


    .filter {
      text-align: center;

      margin-top: 2rem;
      /* opacity: 0.7; */
      transform: 0.5s;
    }

    .filter p {
      font-size: 1rem;
      color: black;
      display: block;
      text-decoration: none;
    }

    .filter:hover {
      opacity: 1;
      text-decoration: underline;
      cursor: pointer;
    }

    .taxes {
      display: none;
      text-decoration: underline;
    }
  </style>

  <body>
    <!-- flash messsage -->

    <!-- filters -->
    <div id="filters" class="mb-3">
      <div class="filter" id="Room">
        <div><i class="fa-solid fa-bed"></i></div>
        <p>Rooms</p>
      </div>
      <div class="filter">
        <div><i class="fa-brands fa-galactic-republic"></i></div>
        <p>Arctic</p>
      </div>
      <div class="filter">
        <div><i class="fa-solid fa-mountain"></i></div>
        <p>Mountain</p>

      </div>
      <div class="filter">
        <div><i class="fa-solid fa-chess-rook"></i></div>
        <p>Kitchen</p>
      </div>
      <div class="filter">
        <div><i class="fa-solid fa-person-swimming"></i></div>
        <p>Pool</p>
      </div>
      <div class="filter">
        <div><i class="fa-solid fa-umbrella-beach"></i></div>
        <p>Beach</p>
      </div>
      <div class="filter">
        <div><i class="fa-solid fa-money-bill-wheat"></i></div>
        <p>Farm</p>
      </div>
      <div class="filter">
        <div><i class="fa-solid fa-tents"></i></div>
        <p>Camping</p>
      </div>

      <div class="tax-toggle">
        <div class="form-check-reverse form-switch">
          <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault">
          <label class="form-check-label" for="flexSwitchCheckDefault">Display total after taxes</label>
        </div>
      </div>
    </div>

    <div class="row row-cols-lg-3 row-cols-md-3 row-cols-sm-1">

      <%if(listing && listing.length ){for(let list of listing){%>
        <a href="/listings/<%=list._id%>" class="listing-link">
          <div class="card col listing-card">
            <img src="<%=list.image.url%>" class="card-img-top" alt="listing-image" style="height: 20rem;">
            <div class="card-img-overlay"></div>
            <div class="card-body">
              <p class="card-text">
                <b>
                  <%=list.title%>
                </b>
                <br>
                Rs.<%=list.price.toLocaleString("en-US")%>/night
                  &nbsp; &nbsp; <i class="taxes">18%GST</i>
              </p>
            </div>
          </div>
        </a>
        <%}} else{ %>
          <h1>No data available in listings</h1>
          <%}%>
    </div>


  </body>

  <script>
    
    let taxButton = document.getElementById("flexSwitchCheckDefault");
    async function setBtn(){
    let tax = await fetch("/listings/getData");
    let Tax = await tax.json();
    console.log("Taxx",Tax)
    if(Tax[0].taxApplied){
      taxButton.checked = true;
    }
  }
  setBtn();
  taxButton.addEventListener("change", async (event) => {
    console.log("I'm displaying tax ")
    let tax = await fetch("/listings/getData");
    let Tax = await tax.json();
      
      event.preventDefault();
      console.log(Tax[0].taxApplied)
      if(Tax[0].taxApplied){
        
        console.log("removing tax")
        window.location.href="/listings/removeTax";
      }
      else{
        console.log("applying tax")

        window.location.href="/listings/applyTax";
      }
      
    })


    const filters = document.querySelectorAll(".filter");

    // Add click event listener to each filter
    filters.forEach((filter) => {
      filter.style.opacity = 0.7; // Set initial opacity for all filters
      filter.addEventListener("click", () => {
        // Reset opacity for all filters

        // Set clicked filter to opacity 1 and underline
        filter.style.opacity = 1;
        filter.style.textDecoration = "underline";
       
        const filterName = filter.querySelector("p").textContent.trim();

        // Redirect to the server with the filter name as a query parameter
        window.location.href = `/listings/filter?filterName=${encodeURIComponent(filterName)}`;
      });
    });


    // eventlistner for filters

  </script>